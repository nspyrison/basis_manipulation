% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2_render.r
\name{render_gganimate}
\alias{render_gganimate}
\title{Render the frames as a \emph{gganimate} animation.}
\usage{
render_gganimate(
  fps = 8L,
  rewind = FALSE,
  start_pause = 0.5,
  end_pause = 1L,
  gif_filename = NULL,
  gif_path = NULL,
  ...
)
}
\arguments{
\item{fps}{Frames animated per second. Defaults to 8.}

\item{rewind}{Logical, should the animation play backwards after reaching
the end? Default to FALSE.}

\item{start_pause}{Number of seconds to pause on the first frame for.
Defaults to .5.}

\item{end_pause}{Number of seconds to pause on the last frame for.
Defaults to 1.}

\item{gif_filename}{Optional, saves the animation as a GIF to this string
(without the folder path). Defaults to NULL (no GIF saved).
For more output control, call \code{gganimate::anim_save()} on a return object of
\code{render_gganimate()}.}

\item{gif_path}{Optional, A string of the directory path (without filename)
to save a GIF to. Defaults to NULL (current work directory).}

\item{...}{Optionally passes arguments to the projection points inside the
aesthetics; \code{geom_point(aes(...))}.}
}
\description{
Takes the result of \code{array2df()} and renders them into a
\emph{gganimate} animation.
}
\examples{
## Setup
dat_std <- tourr::rescale(wine[, 2:14])
clas <- wine$Type
bas <- basis_lda(dat_std, clas)
mv <- manip_var_lda(dat_std, clas)
tour_array <- manual_tour(basis = bas, manip_var = mv)
tour_df <- array2df(array = tour_array, data = dat_std)

\dontrun{
## Required arguments
render_gganimate(frames = tour_df)

## Full arguments (without save)
render_gganimate(frames = df_frames, axes = "bottomleft",
                 fps = 10, rewind = TRUE, start_pause = 1, end_pause = 1.5,
                 aes_args = list(color = clas, shape = clas),
                 identity_args = list(size = .8, alpha = .7)),
                 ggproto = list(theme_spinifex(),
                                ggtitle("My title"),
                                scale_color_brewer(palette = "Set2")))
  
if(F){ ## Save as a .gif (may require additional setup)
  render_gganimate(frames = df_frames, axes = "bottomleft",
                   fps = 10, rewind = TRUE, start_pause = 1, end_pause = 1.5,
                   aes_args = list(color = clas, shape = clas),
                   identity_args = list(size = .8, alpha = .7)),
                   ggproto = list(theme_spinifex(),
                                  ggtitle("My title"),
                                  scale_color_brewer(palette = "Set2")),
                   gif_filename = "myRadialTour.gif", gif_path = "./output")
}
}
}
\seealso{
\code{\link{render_}} for \code{...} arguments.

\code{\link{gganimate::anim_save}} for more control of .gif output.
}
